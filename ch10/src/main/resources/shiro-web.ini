[main]
sessionIdCookie = org.apache.shiro.web.servlet.SimpleCookie
sessionIdCookie.name = sid
sessionIdCookie.maxAge = 1800
#设置 httpOnly 为 true，则服务端不会暴露给客户端代码，cxy 有助于减少某些类型的跨站点脚本攻击
sessionIdCookie.httpOnly = true

#DefaultWebSecurityManager使用的默认实现，用于Web环境，直接使用Servlet容器的会话 - 也可以直接在web.xml中配置
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
#设置会话全局过期时间（单位：毫秒），默认30分钟；也可以设置每个 session 的 timeout
sessionManager.globalSessionTimeout = 1800000

sessionManager.sessionIdCookie = $sessionIdCookie
sessionManager.sessionIdCookieEnabled = true

#session监听器
sessionListener1 = cn.cxy.shiro.listener.MySessionListener1
sessionListener2 = cn.cxy.shiro.listener.MySessionListener2
sessionManager.sessionListeners = $sessionListener1,$sessionListener2

;sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
;sessionManager.sessionDAO = $sessionDAO

sessionDAO = cn.cxy.shiro.session.dao.MySessionDAO
sessionDAO.activeSessionsCacheName = shiro-activeSessionCache
#会话ID生成器
sessionIdGenerator = org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator
sessionDAO.sessionIdGenerator = $sessionIdGenerator
sessionManager.sessionDAO = $sessionDAO

#在 web 环境下，如果用户不主动退出是不知道会话是否过期的，因此需要定期的检测会话是否过期，shiro 提供了 SessionValidationScheduler 来做这件事情；默认使用 ExecutorServiceSessionValidationScheduler
#sessionValidationScheduler = org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler

# ExecutorServiceSessionValidationScheduler 覆盖调用 - 优化调用 sessionDAO.getActiveSessions() 获取全部 session 验证
sessionValidationScheduler = org.apache.shiro.session.scheduler.MySessionValidationScheduler
sessionValidationScheduler.interval = 3600000L
sessionValidationScheduler.sessionManager = $sessionManager

sessionManager.sessionValidationSchedulerEnabled = true
sessionManager.sessionValidationScheduler = $sessionValidationScheduler

#如果会话不想删除的话可以此配置
sessionManager.deleteInvalidSessions = false

#自定义SessionFactory及Session
sessionFactory = org.apache.shiro.session.mgt.OnlineSessionFactory
sessionManager.sessionFactory = $sessionFactory

securityManager.sessionManager = $sessionManager

cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
cacheManager.cacheManagerConfigFile = classpath:ehcache.xml
securityManager.cacheManager = $cacheManager

securityManager.subjectDAO.sessionStorageEvaluator.sessionStorageEnabled = false

#默认是 /login.jsp
authc.loginUrl = /index.jsp
#授权失败时重定向的地址
roles.unauthorizedUrl = /unauthorized
perms.unauthorizedUrl = /unauthorized
#指定退出后的重定向地址
logout.redirectUrl = /index.jsp

[filters]
online = org.apache.shiro.session.filter.OnlineSessionFilter
online.forceLogoutUrl = /index.jsp
online.sessionDAO = $sessionDAO

[users]
zhang = 123,admin
wang = 123

[roles]
admin = user:*,menu:*

[urls]
/index.jsp = anon
/login.jsp = anon
/login = anon
/logout = logout
/success.jsp = authc
/** = authc